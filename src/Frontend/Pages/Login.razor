@page "/login"
@using Frontend.Api.Clients
@using Frontend.Api.Models
@using Frontend.Components
@using Frontend.Components.Alert
@layout AccountManagementLayout
@inject AuthApiClient AuthApiClient
@inject AlertService AlertService
@inject NavigationManager Navigation

<AccountManagementContainer>
    <h4 class="mb-4 text-center fw-semibold">Login</h4>

    <EditForm Model="@loginModel" OnValidSubmit="@HandleLogin">
        <DataAnnotationsValidator/>
        <ValidationSummary/>

        <div class="mb-3">
            <label for="username" class="form-label">Email</label>
            <InputText id="username" class="form-control" @bind-Value="loginModel.Email"/>
        </div>

        <div class="mb-3">
            <label for="password" class="form-label">Password</label>
            <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password"/>
        </div>

        <button type="submit" class="btn btn-dark w-100">Login</button>
    </EditForm>

    <p class="text-center mt-3 text-muted small">
        Don't have an account? <a href="/register">Register</a>
    </p>
</AccountManagementContainer>


@code {
    private readonly LoginModel loginModel = new();
    private bool IsLoginSuccesful;

    private async Task HandleLogin()
    {
        try
        {
            var accessTokenResponse = await AuthApiClient.LoginAsync(
                new LoginRequest(
                    loginModel.Email,
                    loginModel.Password,
                    null,
                    null),
                true,
                true);

            IsLoginSuccesful = true;
        }
        catch
        {
            //Some error handling goes here
            //If not valid creds tell in login modal
            //if technical error use AlertService to show alert
        }
        
        Navigation.NavigateTo("/Overview");
    }

    private class LoginModel
    {
        public string Email { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
    }

}